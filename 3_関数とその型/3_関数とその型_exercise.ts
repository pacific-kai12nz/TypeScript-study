// 課題1: 基本的な関数の型指定
// 以下の関数に、引数と戻り値の型アノテーションを追加してください。
// 引数a, bは数値型、戻り値も数値型です。

function 掛け算(a: number, b: number): number {
  return a * b;
}

// 関数を呼び出して結果を確認
console.log(掛け算(4, 5));  // 期待する結果: 20

// 課題2: 戻り値のない関数
// 以下の関数に適切な型アノテーションを追加してください。
// 引数は文字列型、この関数は何も返しません（コンソールに出力するだけ）。

function 通知メッセージ(メッセージ: string): void {
  console.log(`通知: ${メッセージ}`);
}

// 関数を呼び出して結果を確認
通知メッセージ("TypeScriptの学習を始めましょう");

// 課題3: オプションパラメータの活用
// 以下の関数に型アノテーションを追加し、2つ目の引数をオプションにしてください。
// 第1引数（名前）は文字列型、第2引数（年齢）は数値型でオプション、戻り値は文字列型です。
// 年齢が指定されない場合は「年齢不明」と表示します。

function プロフィール表示(名前: string, 年齢?: number): string {
  if (年齢) {
    return `${名前}さん（${年齢}歳）`;
  } else {
    return `${名前}さん（年齢不明）`;
  }
}

// 関数を呼び出して結果を確認
console.log(プロフィール表示("山田"));       // 期待する結果: "山田さん（年齢不明）"
console.log(プロフィール表示("佐藤", 28));  // 期待する結果: "佐藤さん（28歳）"

// 課題4: デフォルトパラメータの活用
// 以下の関数に型アノテーションを追加し、2つ目の引数にデフォルト値を設定してください。
// 第1引数（価格）は数値型、第2引数（税率）は数値型で、デフォルト値は0.10（10%）、戻り値は数値型です。

function 税込価格計算(価格: number, 税率: number = 0.10): number {
  return 価格 * (1 + 税率);
}

// 関数を呼び出して結果を確認
console.log(税込価格計算(1000));        // 期待する結果: 1100（デフォルト税率10%適用）
console.log(税込価格計算(1000, 0.08));  // 期待する結果: 1080（指定した税率8%適用）

// 課題5: 関数型の変数
// 以下の型定義と関数にアノテーションを追加してください。
// まず、「計算処理」という関数型を定義し、2つの数値を受け取り1つの数値を返す型にします。
// その後、この型を使って変数に関数を格納します。

// ここに「計算処理」という型を定義
type 計算処理 = (a: number, b: number) => number;

// 計算処理型の変数に関数を代入
const 足し算: 計算処理 = (a: number, b: number) => a + b;
const 引き算: 計算処理 = (a: number, b: number) => a - b;

// 第3の計算関数を作成
function 掛け算関数(a: number, b: number): number {
  return a * b;
}

// ここで計算処理型として型を指定して掛け算関数を代入してください
const 掛け算変数: 計算処理 = 掛け算関数;

// 関数を呼び出して結果を確認
console.log(足し算(10, 5));      // 期待する結果: 15
console.log(引き算(10, 5));      // 期待する結果: 5
console.log(掛け算変数(10, 5));  // 期待する結果: 50
